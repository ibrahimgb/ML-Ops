name: Github-Azure Hub MLOps pipeline

env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  REPO_NAME: ${{secrets.REPO_NAME}}

# Event Triggers:
# The pipeline is triggered whenever there is a push to the main branch.
# It is also triggered whenever there is a pull request to the main branch.

on:
  push:
    branches:
    - deploy
  pull_request:
    branches:
    - deploy

# this pipeline consists of a two jobs named ci_pipeline

jobs:


  ci_pipeline: 
       runs-on: ubuntu-latest     # The job runs on the ubuntu-latest operating system
       
       steps:
        - uses: actions/checkout@v1 
          with:
            fetch-depth: 0
#The first step uses the actions/checkout@v1 action to clone the repository.
#The fetch-depth: 0 parameter ensures that the complete commit history is fetched.

        - name: Set up Python 3.9
          uses: actions/setup-python@v1
          with:
            python-version: 3.9
#The second step sets up Python 3.9 by using the actions/setup-python@v1 action.
#The python-version: 3.9 parameter specifies the desired Python version.

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
# The third step installs the project dependencies.

        - name: Format
          run: |
            black loan_analysis_app.py
# The fourth step formats the app.py file using the black code formatter.

        - name: Lint
          run: |
            pylint --disable=R,C  loan_analysis_app.py
#The fifth step performs linting on the app.py file using pylint.
#The --disable=R,C flag disables specific pylint checks.

        - name: Test
          run: |
            python -m pytest -vv test_app.py


  cd_pipeline:

      runs-on: ubuntu-latest 
      needs: [ci_pipeline]
 
      steps:
        # Step 1: Checkout the repository
        - name: Checkout the repository
          uses: actions/checkout@v2

        # Step 2: Log in to Azure
        - name: Log in to Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}

        # Step 3: Log in to Azure Container Registry (ACR)
        - name: Log in to Azure Container Registry
          run: |
            az acr login --name loananalysis

        # Step 4: Build Docker image
        - name: Build Docker image
          run: |
            docker build -t loananalysis.azurecr.io/loan-analysis-app:latest .

        # Step 5: Push Docker image to ACR
        - name: Push Docker image to ACR
          run: |
            docker push loananalysis.azurecr.io/loan-analysis-app:latest